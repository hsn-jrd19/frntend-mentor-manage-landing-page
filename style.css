/* declaring custom properties */

:root {
  /* colors */
  --clr-accent-500: hsl(12, 60%, 45%); /*orange */
  --clr-accent-400: hsl(12, 88%, 59%);
  --clr-accent-300: hsl(12, 88%, 75%);
  --clr-accent-100: hsl(13, 100%, 96%);

  --clr-pri-400: hsl(228, 39%, 23%); /* dark blue */

  --clr-neutral-900: hsl(232, 12%, 13%); /* very dark blue */
  --clr-neutral-100: hsl(0, 0%, 100%); /* white */

  /* font family */
  --ff-primary: 'Roboto', sans-serif;
  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);

  /* font weights */
  --fw-regular: 400;
  --fw-semi-bold: 500;
  --fw-bold: 700;

  /* font sizes */
  --fs-300: 0.8125rem; /* 13px */
  --fs-400: 0.875rem; /* 14px */
  --fs-500: 0.9375rem; /* 15px */
  --fs-600: 1rem; /* 16px */
  --fs-700: 1.875rem; /* 30px */
  --fs-800: 2.5rem; /* 40px */
  --fs-900: 3.5rem; /* 56px */

  --fs-body: var(--fs-400); /* 14px */
  --fs-primary-heading: var(--fs-800); /* 40px */
  --fs-secondary-heading: var(--fs-700); /* 56px */
  --fs-nav: var(--fs-500); /* 16px */
  --fs-button: var(--fs-300); /* 13px */

  /*padding size */
  --size-100: 0.25rem; /* 4px */
  --size-200: 0.5rem; /* 8px */
  --size-300: 0.75rem; /* 12px */
  --size-400: 1rem; /* 16px */
  --size-500: 1.5rem; /* 20px */
  --size-600: 2rem; /* 24px */
  --size-700: 3rem; /* 32px */
  --size-800: 4rem; /* 48px */
  --size-900: 5rem; /* 72px */
}

@media (min-width: 50em) {
  :root {
    --fs-body: var(--fs-500); /* 15px */
    --fs-primary-heading: var(--fs-900); /* 56px */
    --fs-secondary-heading: var(--fs-800); /* 40px */
    --fs-nav: var(--fs-300); /* 13px */
  }
}

/* global reset */

/* // https://piccalil.li/blog/a-modern-css-reset */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin n padding */
* {
  margin: 0;
  padding: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit; /*this property will reset the fnt sizes like h1,h2 etc take away thr bold and stuff so all look the same */
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Utility classes */

/* colors */

.text-primary-400 {
  color: var(--clr-primary-400);
}
.text-accent-400 {
  color: var(--clr-accent-400);
}
.text-accent-100 {
  color: var(--clr-accent-100);
}
.text-neutral-100 {
  color: var(--clr-neutral-100);
}
.text-neutral-900 {
  color: var(--clr-neutral-900);
}
/* background */

.bg-primary-400 {
  background-color: var(--clr-primary-400);
}
.bg-accent-400 {
  background-color: var(--clr-accent-400);
}
.bg-accent-100 {
  background-color: var(--clr-accent-100);
}
.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}
.bg-neutral-900 {
  background-color: var(--clr-neutral-900);
}
/* font weight */

.fw-bold {
  font-weight: var(--fw-bold);
}
.fw-semi-bold {
  font-weight: var(--fw-semi-bold);
}
.fw-regular {
  font-weight: var(--fw-regular);
}
/* font size */

.fs-primary-heading {
  font-size: var(--fs-primary-heading);
  line-height: 1.1;
}
.fs-secondary-heading {
  font-size: var(--fs-secondary-heading);
  line-height: 1.1;
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-400 {
  font-size: var(--fs-400);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-600 {
  font-size: var(--fs-600);
} /*Now the idea is if a util class has number e.g fs-600 its not chnging through the screens but if a class d0es not has the num it will change as we apply media queries*/

.padding-block-900 {
  padding-block: var(--size-900);
}
.padding-block-700 {
  padding-block: var(--size-700);
}

.container {
  --max-width-: 1110px; /* - in the end of cstm prpty indicating its a locally scoped custom property */
  --padding-: 1rem;
  width: min(var(--max-width-), 100% - (var(--padding-) * 2)); /* we dont need calc here bcas we r inside of the min function */
  margin-inline: auto; /* will center the container */
}
.even-columns {
  display: grid;
  gap: 1rem;
}
/* [grid-auto-columns: 1fr;] this property sets the size of implicit columns and any other columns that have not been explicitly sized in the grid-template-columns property. */

/* [grid-auto-flow: column] The auto-placement algorithm will place grid items by filling each column and create additional columns if needed since we set auto-placement to column, it generates additional columns in order to place the rest of the grid items, which may cause an overflow Note that those additional columns are called implicit columns and we can control their size using the grid-auto-columns property. */

@media (min-width: 50em) {
  .even-columns {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}
/* General styling */

body {
  font-family: var(--ff-body);
  font-size: var(--fs-body);
  color: var(--clr-primary-400);
}

.btn {
  border: 0;
  border-radius: 100vmax; /* 9999px its a pill shape bordr radius */
  padding: 1.25em 2.5em;
  font-weight: var(--fw-bold);
  font-size: var(--fs-button);
  color: var(--clr-neutral-100);
  background-color: var(--clr-accent-400);
  line-height: 1;
  text-decoration: none;
  cursor: pointer;
  box-shadow: 0 1.2em 1em -1em var(--clr-accent-500);
}

.btn.btn--invert {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-400);
}

.btn.btn--invert:hover,
.btn.btn--invert:focus-visible {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-300);
}

.btn:hover,
.btn:focus-visible {
  background-color: var(--clr-accent-300);
}

/*Ctrl+X = Cut line (empty selection) You can erase the whole line you selected.
Alt+ ↑ / ↓ = Move line up/down. You can move the line using the arrows without having to erase
Shift+Alt + ↓ / ↑ = Copy line up/down. This will copy the line as many times as you press the arrow.
Ctrl+Shift+K = Delete line. This will delete the whole line instantly.
Home / End = Go to beginning/end of line.
Ctrl+Home =Go to beginning of file
Ctrl+End =Go to end of file
Search and replace


Ctrl+F = Find. This will open the search global find sidebar.
Ctrl+H = Replace. This will open the taskbar where you can write what you wish to replace.
Multi-cursor and selection


Alt+Click = Insert cursor. You can insert the cursor on as many lines at once and write the same thing at the same time on all lines
CTRL+D = Multi-select an element. When you need to change the H3 tags to the H4 tags (all of them) in a file, what will you do? You have to select one H3 tag and use the shortcut. This will find every H3 tag and give you an active cursor for further action.
Ctrl+U = Undo last cursor operation.
Shift+Alt+I = Insert cursor at end of each line selected
Ctrl+L = Select current line. It selects the current line like you would do it with the mouse when wanting to copy and paste something.
Rich language editing


Ctrl+Space = Trigger suggestion. The program will automatically be suggesting.
Shift+Alt+F = Format document
Editor management


Ctrl+F4, Ctrl+W = Close editor
Ctrl+\ = Split editor
Ctrl+ 1 / 2 / 3 = Focus into 1 st, 2nd or 3rd editor group

File Management

Ctrl+N = New File
Ctrl+O = Open File...
Ctrl+S = Save
Ctrl+Shift+S = Save As...
Ctrl+F4 = Close
Ctrl+Shift+T = Reopen closed editor
Ctrl+Tab = Open next

Display

Ctrl+B = Toggle Sidebar visibility
Ctrl+Shift+F = Show Search
Ctrl+Shift+G = Show Source Control
Ctrl+Shift+H = Replace in files
Ctrl+Shift+U = Show Output panel
Ctrl+Shift+V = Open Markdown preview

Integrated Terminal

Ctrl+` = Show integrated terminal
Ctrl+Shift+` = Create new terminal */
